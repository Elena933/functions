  const [counts, setCounts] = useState(initialCounters)
 
 const minus = (id) => {
        const updatedCounts = counts.map(el => el.id === id
            ? {...el, value: el.value - 1}
            : el
        );
        setCounts(updatedCounts)
    }
    const plus = (id) => {
        const updatedCounts = counts.map(el => el.id === id
            ? {...el, value: el.value + 1}
            : el
        );
        setCounts(updatedCounts)
    }
    const addCounter = () => {
        const newCount = {
            id: Math.random(),
            value:0
        };
        setCounts([...counts,newCount])
    }
    const deleteCounter = (id)=> {
        const deleteCount =
            counts.filter(el => el.id !== id)

        setCounts(deleteCount)
    }
    
    const moveUp = (id) => {
        const newList = [...list]
        const currentIndex = list.indexOf(newList.find(el => el.id === id))
        const currentTask = newList[currentIndex]
        newList[currentIndex] = newList[currentIndex - 1]
        newList[currentIndex - 1] = currentTask
        setList(newList)
    }

    const moveDown = (id) => {
        const newList = [...list]
        const currentIndex = list.indexOf(newList.find(el => el.id === id))
        const currentTask = newList[currentIndex]
        newList[currentIndex] = newList[currentIndex + 1]
        newList[currentIndex + 1] = currentTask
        setList(newList)
    }
